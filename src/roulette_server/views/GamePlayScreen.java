package roulette_server.views;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

/**
 *
 * @author Jovan
 */
public class GamePlayScreen extends javax.swing.JFrame {

    /**
     * Creates new form GamePlayScreen
     */
    public GamePlayScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        vSeparator = new javax.swing.JSeparator();
        valueTextField = new javax.swing.JTextField();
        colorTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        playersTable = new javax.swing.JTable();
        parityTextField = new javax.swing.JTextField();
        valueLabel = new javax.swing.JLabel();
        parityLabel = new javax.swing.JLabel();
        colorLabel = new javax.swing.JLabel();
        statusBarPanel = new javax.swing.JPanel();
        statusBarLabel = new javax.swing.JLabel();
        statusBarTextField = new javax.swing.JTextField();
        kickButton = new javax.swing.JButton();
        rowTextField = new javax.swing.JTextField();
        rowLabel = new javax.swing.JLabel();
        columnTextField = new javax.swing.JTextField();
        columnLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Roulette");

        vSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);

//        valueTextField.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                valueTextFieldActionPerformed(evt);
//            }
//        });

//        colorTextField.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                colorTextFieldActionPerformed(evt);
//            }
//        });

        playersTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "ID", "Name", "Balance", "Beted"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        playersTable.setToolTipText("");
        playersTable.setRowHeight(25);
        jScrollPane1.setViewportView(playersTable);

        valueLabel.setText("Value:");

        parityLabel.setText("Parity:");

        colorLabel.setText("Color:");

        statusBarPanel.setBackground(new java.awt.Color(204, 204, 204));

        statusBarLabel.setText("Status:");

        statusBarTextField.setEditable(false);
        statusBarTextField.setBackground(new java.awt.Color(204, 204, 204));
        statusBarTextField.setText("Unidentified");
        statusBarTextField.setBorder(null);
//        statusBarTextField.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                statusBarTextFieldActionPerformed(evt);
//            }
//        });

        javax.swing.GroupLayout statusBarPanelLayout = new javax.swing.GroupLayout(statusBarPanel);
        statusBarPanel.setLayout(statusBarPanelLayout);
        statusBarPanelLayout.setHorizontalGroup(
                statusBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(statusBarPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(statusBarLabel)
                                .addGap(18, 18, 18)
                                .addComponent(statusBarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statusBarPanelLayout.setVerticalGroup(
                statusBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(statusBarPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(statusBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(statusBarLabel)
                                        .addComponent(statusBarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kickButton.setText("Kick");
//        kickButton.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                kickButtonActionPerformed(evt);
//            }
//        });

//        rowTextField.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                rowTextFieldActionPerformed(evt);
//            }
//        });

        rowLabel.setText("Row:");

        columnLabel.setText("Column:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(statusBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(parityLabel)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(valueLabel)
                                                        .addComponent(colorLabel)
                                                        .addComponent(rowLabel)
                                                        .addComponent(columnLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(valueTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(parityTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(colorTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(rowTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(columnTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                                                .addGap(56, 56, 56)
                                                .addComponent(vSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(241, 241, 241)
                                                                .addComponent(kickButton)))
                                                .addContainerGap(21, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(286, 286, 286)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(valueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(valueLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(parityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(parityLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(colorLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(rowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(rowLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(columnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(columnLabel)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addComponent(vSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(85, 85, 85)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(kickButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addComponent(statusBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>

//    private void valueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
//        // TODO add your handling code here:
//    }
//
//    private void statusBarTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
//        // TODO add your handling code here:
//    }
//
//    private void colorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
//        // TODO add your handling code here:
//    }
//
//    private void rowTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
//        // TODO add your handling code here:
//    }
//
//    private void kickButtonActionPerformed(java.awt.event.ActionEvent evt)
//    {
//        DefaultTableModel model=(DefaultTableModel) playersTable.getModel();
//        model.removeRow(playersTable.getSelectedRow());
//    }
//
//    //obrisati listenere

    public synchronized void setToStatusBarTextField(String info)
    {
        statusBarTextField.setText(info);
    }

    public synchronized void setToNumberInfoFields(int number)
    {
        if(number==-1)
        {
            valueTextField.setText("?");
            parityTextField.setText("?");
            colorTextField.setText("?");
            rowTextField.setText("?");
            columnTextField.setText("?");
        }
        else
        if(number==-2)
        {
            valueTextField.setText("");
            parityTextField.setText("");
            colorTextField.setText("");
            rowTextField.setText("");
            columnTextField.setText("");
        }
        else
        {
            valueTextField.setText(Integer.toString(number));

            //Parnost
            if(number%2==0)
                parityTextField.setText("Even");
            else
                parityTextField.setText("Odd");

            //Boja
            if(number==0)
                colorTextField.setText("Green");
            else
            {
                int color=number%18;
                if(color==0)
                    colorTextField.setText("Red");
                else
                if(color<=10 && color%2==1)
                    colorTextField.setText("Red");
                else
                if(color>10 && color%2==0)
                    colorTextField.setText("Red");
                else
                    colorTextField.setText("Black");
            }

            //Red
            if(number==0)
                rowTextField.setText("/");
            else
                rowTextField.setText(Integer.toString((int)(Math.ceil(number / 3.0))));

            //Kolona
            if(number==0)
                columnTextField.setText("/");
            else
            {
                if(number%3==0)
                    columnTextField.setText(Integer.toString(3));
                else
                    columnTextField.setText(Integer.toString(number%3));
            }
        }

    }

    public synchronized void addRowToTable(int id,String name,double balance,double betted)
    {
        DefaultTableModel model=(DefaultTableModel) playersTable.getModel();
        model.addRow(new Object[]{id,name,balance,betted});
    }

    public synchronized void addKickButtonActionListener(java.awt.event.ActionListener evt)
    {
        kickButton.addActionListener(evt);
    }

    public synchronized int removeSelectedRow()
    {
        DefaultTableModel model=(DefaultTableModel) playersTable.getModel();
        int rowNumber=playersTable.getSelectedRow();
        int id=Integer.parseInt(playersTable.getValueAt(rowNumber,0).toString());
        model.removeRow(playersTable.getSelectedRow());
        return id;
    }

    public synchronized void updateBettedMoney(int id,double money)
    {
        int nbOfRows=playersTable.getRowCount();
        for(int i=0;i<nbOfRows;i++)
        {
            if(Integer.parseInt(playersTable.getValueAt(i,0).toString())==id)
            {
                double amount=0;
                amount+=Double.parseDouble(playersTable.getValueAt(i, 3).toString()) + money;
                playersTable.setValueAt(amount,i,3);
                break;
            }
        }
    }

    public synchronized void upadateBalanceMoney(int id, double money)
    {
        int nbOfRows=playersTable.getRowCount();
        for(int i=0;i<nbOfRows;i++)
        {
            if(Integer.parseInt(playersTable.getValueAt(i, 0).toString())==id)
            {
                playersTable.setValueAt(money,i,2);
                break;
            }
        }
    }

    public synchronized  void removeRow(int id)
    {
        DefaultTableModel model=(DefaultTableModel) playersTable.getModel();
        int nbOfRows=playersTable.getRowCount();
        for(int i=0;i<nbOfRows;i++)
        {
            if(Integer.parseInt(playersTable.getValueAt(i,0).toString())==id)
            {
                model.removeRow(i);
                break;
            }
        }
    }

    public synchronized  void anullBettedMoney(int id)
    {
        int nbOfRows=playersTable.getRowCount();
        for(int i=0;i<nbOfRows;i++)
        {
            if(Integer.parseInt(playersTable.getValueAt(i,0).toString())==id)
            {
                playersTable.setValueAt(0.0,i,3);
                break;
            }
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GamePlayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GamePlayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GamePlayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GamePlayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GamePlayScreen().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify
    private javax.swing.JLabel colorLabel;
    private javax.swing.JTextField colorTextField;
    private javax.swing.JLabel columnLabel;
    private javax.swing.JTextField columnTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kickButton;
    private javax.swing.JLabel parityLabel;
    private javax.swing.JTextField parityTextField;
    private javax.swing.JTable playersTable;
    private javax.swing.JLabel rowLabel;
    private javax.swing.JTextField rowTextField;
    private javax.swing.JLabel statusBarLabel;
    private javax.swing.JPanel statusBarPanel;
    private javax.swing.JTextField statusBarTextField;
    private javax.swing.JSeparator vSeparator;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTextField valueTextField;
    // End of variables declaration
}
